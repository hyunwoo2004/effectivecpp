#include<iostream>

// Effective C++
// 4. 설계 및 선언
// 항목 18: 인터페이스 설계는 제대로 쓰기엔 쉽게, 엉터리로 쓰기엔 어렵게 하자

// 이야기가 좀 길어지긴 했지만 이번 항목의 주제는 tr1::shared_ptr이 아님(위 항목 이름이 주제임)
// 그러나 tr1::shared_ptr을 사용하면 사용자가 무심코 저지를 수 있는 실수 몇 가지를 없앰으로써 '그러한' 인터페이스를 만드는 데 쉽게 다가갈 수 있음
// 이 정도면 전반적인 사용법을 알아본 값어치는 한다고 생각함
// 참고로, tr1::shared_ptr을 구현한 제품 중 가장 흔히 쓰이는 것은 부스트 라이브러리(항목 55 참고)임.
// 부스트의 shared_ptr은 일단 크기가 원시 포인터의 두 배임

int main() 
{
}


