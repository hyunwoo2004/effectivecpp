#include<iostream>

// Effective C++
// 4. 설계 및 선언

// 소프트웨어 설계(달리 말하면 소프트웨어가 우리가 원하는 동작을 하도록 틀을 짜는 방법)는 뭐 그렇다.
// 일단 시작할 때는 뜬 구름 잡는 일반적인 아이디어로 시작했다가, 끝날 무렵이면 결국 구정물에 발 담그즛 질척질척한 인터페이스 설계까지 이르게 됨
// 그리고 이렇게 만들어진 인터페이스는 C++ 선언문으로 옮겨져야 함이 옳은 순서일 것임
// 어떻게 하면 좋은 C++ 인터페이스를 설계하고 선언할 수 있는가?
// 이 장에서는 바로 이 문제에 백드롭을 걸어보도록 하겠음
// 일단 시작은 어떤 인터페이스를 설계하든지 막론하고 아마 가장 중요할 것 같은 지침, '제대로 쓰기엔 쉽게, 엉터리로 쓰기엔 어렵게'로 포문을 열려고 함
// 이 지침이 깔아 준 튼튼한 무대 위에서, 정확성*효율*캡슐화*유지보수성*확장성, 그리고 규약 준수에 이르는 인터페이스 설계에 얽힌 많고 많은 문제에 대한 구체적인 지침들이
// 활짝 웃으며 우리와 만나게 될 것임

// 지금부터 나올 내용이 좋은 인터페이스 설계를 위해 필요한 모든 것을 제공한다고 볼 순 없지만, 가장 중요한 고려사항들 중 몇 가지는 또렷하게 조명하고 있고,
// 가장 흔한 잘못들 중 몇 개는 제대로 알려주고 있으며, 클래스*함수*템플릿을 설계하는 데 있어 종종 신경을 건드리는 문제들의 해결방법도 꼼꼼히 준비되어 있으니 시작하자!

int main() 
{

}



