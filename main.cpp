#include<iostream>

// Effective C++
// 3. 자원 관리
// 항목 16: new 및 delete를 사용할 떄는 형태를 반드시 맞추자

// 어려울 것 하나도 없음 - new 표현식에 []를 썼으면, 여기에 대응하는 delete 표현식에도 []을 써야한다는 아주 간단한 규칙임
// new 표현식에 []을 안썼으면 , 대응되는 delete 표현식에도 []을 안 쓰면 됨

// 동적 할당된 메모리에 대한 포인터를 멤버 데이터로 갖고 있는 클래스를 만드는 중이며 
// 이 클래스에서 제공하는 생성자도 여러 개일 경우에 특히 이 규칙을 뼈속 깊이 간직하자!

int main() 
{

}



