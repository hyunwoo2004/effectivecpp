#include<iostream>

// Effective C++
// 3. 자원 관리
// 항목 13: 자원 관리에는 객체가 그만!

// createInvestment 함수로 얻어낸 자원이 항상 해제되도록 만들 방법은, 자원을 객체에 넣고 그 자원 해제를 소멸자가 맡도록 하며,
// 그 소멸자는 실행 제어가 f를 떠날 때 호출되도록 만드는 것임
// 사실 이 부분은 이번 항목에서 소개할 아이디어에 전반부이니 새겨 들자!
// 자원을 객체에 넣음으로써, C++가 자동으로 호출해 주는 소멸자에 의해 해당 자원을 저절로 해제할 수 있음!

// 소프트웨어 개발에 쓰이는 상당수의 자원이 Freestore(Heap)에서 동적으로 할당되고, 하나의 블록(block) 혹은 함수 안에서만 쓰이는 경우가 잦기 때문에
// 그 블록 혹은 함수로부터 실행 제어가 빠져나올 때 자원이 해제되는 게 맞음
// 표준 라이브러리를 보면 auto_ptr아린 것이 있는데, 바로 이런 용도에 쓰라고 마련된 클래스임
// auto_ptr은 포인터와 비슷하게 동작하는 객체[스마트 포인터(smart pointer)]로서, 가리키고 있는 대상에 대해 소멸자가 자동으로 delete를 불러주도록 설계되어 있음

int main() 
{

}


