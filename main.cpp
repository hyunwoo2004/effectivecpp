#include<iostream>
#include <list>

// Effective C++
// 1. C++에 왔으면 C++ 법을 따릅시다.
// 항목 4: 객체를 사용하기 전에 반드시 그 객체를 초기화하자

// 남은 걱정거리는 하나 
// 비지역 정적 객체의 초기화 순서는 개별 번역 단위에서 정해진다는 사실 
//        -> 별개의 번역 단위에서 정의된 비지역 정적 객체들의 초기화 순서는 '정해지지 않는다'
// 그러면 tempDir 전에 tfs가 초기화되게 만드는 방법이 있을까?
// 단언컨대 안됨. (이유는 위에 있음)
// 비지역 정적 객체들의 초기화에 대해 '적절한' 순서를 결정하는 건 매우 어려움
// 그러면 비지역 정적 객체로 사용하지 않으면 어떨까?
// 방법: 비지역 정적 객체를 하나씩 맡는 함수를 준비하고 이 안에 각 객체를 넣는 것임.
//       함수 속에서도 이들은 정적 객체로 선언하고, 그 함수에서는 이들에 대한 참조자를 반환하게 만든다
//       사용자 쪽에는 비지역 정적 객체를 직접 참조하는 과거의 폐단을 버리고 이제는 함수 호출로 대신함
//       --> 비지역 정적 객체를 '지역 정적 객체'로 바꾸면 됨 (디자인 패턴에서는 '단일체 패턴'(Singleton pattern)의 전형적인 구현양식임)




int main() {

} 

