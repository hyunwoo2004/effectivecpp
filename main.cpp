#include<iostream>

// Effective C++
// 4. 설계 및 선언
// 항목 18: 인터페이스 설계는 제대로 쓰기엔 쉽게, 엉터리로 쓰기엔 어렵게 하자

// 그래서 항목 13의 이후를 읽어 보면 createInvestment의 반환 값을 auto_ptr이나 tr1::shared_ptr 등의 스마트 포인터에 
// 저장한 후에 해당 포인터를 삭제 작업을 스마트 포인터에게 떠넘기는 방법을 확인할 수 있음
// 하지만 이 스마트 포인터를 사용해야 한다는 사실도 사용자가 잊어버리면 어떻게 하나?
// 차라리 우리가 처음부터 끝까지 문제가 생길 여지를 일망타진해 놓는 편이 좋지 않겠는가?
// 즉, 애초부터 팩토리 함수가 스마트 포인터를 반환하게 만드는 것이다.

std::tr1::shared_ptr<Investment> createInvestment();

int main() 
{
}


