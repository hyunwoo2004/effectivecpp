#include<iostream>

// Effective C++
// 2. 생성자, 소멸자 및 대입 연산자
// 항목 11: operator=에서는 자기대입에 대한 처리가 빠지지 않도록 하자

// 자기대입(self assignment)이란, 자기 객체가 자기 자신에 대해 대입 연산자를 적용하는 것을 말함
// 바보 같은 사람의 눈에난 문제가 없을 법한 코드 같지만, 이 코드는 적법한(legal)코드임.
// -> 제정신일 확률이 높은 사용자 쪽에서도 이렇게 할 수 있다는 소리
// 게다가 대입이란 연산이 그렇게 눈에 피는가 하면 그것도 아니라는 것이 더 큰 문제임
// 예시2
*px = *py;              // 자기대입의 가능성을 하나 가득 품은 문장

// 이 문장의 경우, px 및 py가 가리키는 대상이 같으면 자기대입이 됨

// 언뜻 보기에 명확하지 않은 이러한 자기대입이 생기는 이유는 여러 곳에서 하나의 객체를 참조하는 상태, 즉 중복참조(aliasing) 때문임
// 같은 타입으로 만들어진 객체 여러 개를 참조자 혹은포인터로 물어 놓고 동작하는 코드를 작성한 때는 같은 객체는 사용될 가능성을 
// 고려하는 것이 일반적으로 바람직한 자세임!

int main() 
{

}


