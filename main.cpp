#include<iostream>

// Effective C++
// 2. 생성자, 소멸자 및 대입 연산자
// 항목 9: 객체 생성 및 소멸 과정 중에는 절대로 가상 함수를 호출하지 말자

// 이 같은 동작에는 다 이유가 있음
// -> 기본 클래스 생성자는 파생 클래스 생성자보다 앞서서 실행되기 때문에, 
//    기본 클래스 생성자가 돌아가고 있을 시점에 파생 클래스 데이터 멤버는 아직 초기화된 상태가 아님이 중요!
// 이 때 기본 클래스 생성자에서 어쩌다 호출된 가상 함수가 파생 클래스 쪽으로 내려간다면 어떨까?
// -> 파생 클래스 버전의 가상 함수는 파생 클래스만의 데이터 멤버를 건드릴 것이 뻔한데, 이들은 아직 초기화되지 않음
// 어떤 객체의 초기화되지 않은 역역을 건드린다는 것은 치명적인 위험을 내포하므로
// C++는 이런 실수를 하지 않도록 막음

int main() 
{
}
