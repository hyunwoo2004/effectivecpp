#include<iostream>

// Effective C++
// 2. 생성자, 소멸자 및 대입 연산자
// 항목 9: 객체 생성 및 소멸 과정 중에는 절대로 가상 함수를 호출하지 말자

// 지금 이 것보다 더 중요한 이야기가 있음
// 파생 클래스 객체의 기본 클래스 부분이 생성되는 동안은, 그 객체의 타입은 바로 기본 클래스임
//   호출되는 가상 함수는 모두 기본 클래스의 것으로 결정(resolve)될 뿐만 아니라, 
// 런타임 타입 정보를 사용하는 언어 요소(dynamic_cast, typeid 등)를 사용한다 해도 이 순간엔 모두 기본 클래스 타입의 객체로 취급함
//   위의 예제로 보면 BuyTransaction 객체의 기본 클래스 부분을 초기화하기 위해 Transaction 생성자가 실행되고 있는 동안에는, 
// 그 객체의 타입이 Transaction이라는 뜻
// 이런 식의 처리는 C++ 언어의 다른 모든 기능에서 이루어지고 있고, 타당성도 아주 충분함
// BuyTransaction 클래스만의 데이터는 아직 초기화된 상태가 아니기 때문에, 아예 없었던 것처럼 취급하는 편이 최고로 안전함
// 그러니까 파생 클래스의 생성자의 실행이 시작되어야만 그 객체가 비로소 파생 클래스 객체의 면모를 갖게 됨
 
int main() 
{
}
