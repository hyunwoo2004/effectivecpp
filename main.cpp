#include<iostream>

// Effective C++
// 4. 설계 및 선언
// 항목 19: 클래스 설계는 타입 설게와 똑같이 취급하자

// 그럼 우리가 효과적인 클래스를 설계할 때 어떻게 하는가?
// 우리가 직면하게 될 고려사항이 무엇인지부터 파악하는 게 우선임
// 어떤 클래스를 설계하든 간에 사실상 모든 경우에 우리의 후두부를 괴롭힐 질문들을 아래에 모아 봄
// 이들 질문의 대답에 따라 설계를 제한하는 것들이 생기게 되는데, 이 부분 역시 신경 쓰지 않으면 안 됨

// * 고려 사항 *
// 5. 기존의 클래스 상속 계통망(inheritance graph)에 맞출 것인가? 
// 이미 갖고 있는 클래스로부터 생속을 시킨다고 하면, 당연히 우리의 설계는 이들 클래스에 의해 제약을 받게 됨
// 특히 멤버 함수가 가상인가 비가상인가의 여부가 가장 큰 요인임(항목 34, 36 참조)
// 우리가 만든 클래스를 다른 클래스들이 상속할 수 있게 만들자고 결정했다면, 이에 따라 멤버 함수의 가상 함수 여부가 결정됨
// -> 특히 소멸자가 해당됨(항목 7 참조)


int main() 
{
} 


