#include<iostream>

// Effective C++
// 3. 자원 관리
// 항목 13: 자원 관리에는 객체가 그만!

// 투자를 모델링해 주는 클래스 라이브러리를 가지고 어떤 작업을 한다고 가정해보자!
// 이 라이브러리는 Investment 라는 최상위 클래스가 있고, 이것을 기본으로 하여 구체적인 형태의 투자 클래스가 파생되어 있음
// 예시
class Investment { ... }:                          // 여러 형태의 투자를 모델링한
                                                   // 클래스 계통의 최상위 클래스
// 가정을 하나 더 하겠음 - 이 라이브러리는 Investment에서 파생된 클래스의 객체를 사용자가 얻어내는 용도로 팩토리 함수(항목 7 참조)
//                        만을 쓰도록 만들어짐
// 예시
Investment* createInvestment();                    // Investment 클래스 계통에 속한
                                                   // 클래스의 객체를 동적 할당하고
                                                   // 그 포인터를 반환함
                                                   // 이 객체의 해제는 호출자 쪽에서 직접
                                                   // 해야 함
                                                   // (매개변수는 복잡하니까 뺌.)
int main() 
{

}


